{
  "address": "0x48C3B6Ed95bEc6D52E46FE3f8ccA2ff5B09A47C9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "PriceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnwer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPricefeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x513c130cbaab39219d36bc0d48f253c7585e4dc17a4ecb104c50c9710f99eff9",
  "receipt": {
    "to": null,
    "from": "0x83d49C9Bf34cE901e164B7FFd789446E60d5BB93",
    "contractAddress": "0x48C3B6Ed95bEc6D52E46FE3f8ccA2ff5B09A47C9",
    "transactionIndex": 100,
    "gasUsed": "642214",
    "logsBloom": "0x
    "blockHash": "0x42edec154feaabfd21d5117c7cb58b64f9f6dccfac9f6fa0576a5665f8e960f6",
    "transactionHash": "0x513c130cbaab39219d36bc0d48f253c7585e4dc17a4ecb104c50c9710f99eff9",
    "logs": [],
    "blockNumber": 7808440,
    "cumulativeGasUsed": "27112180",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "65ee35559535a1e96e019906e0bf18f6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"PriceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnwer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricefeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Sammy\",\"details\":\"this implements pricefeed as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"this implements pricefeed as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"this function funds the contrat\"}},\"notice\":\"a demo  funnding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_NotOwner();\\n\\n/**\\n * @title  A contract for crowd funding\\n * @author Sammy\\n * @notice a demo  funnding contract\\n * @dev this implements pricefeed as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    // event Funded(address indexed from, uint256 amount);\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 10 * 10**18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe_NotOwner();\\n        _;\\n    }\\n\\n    constructor(address PriceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(PriceFeedAddress);\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice this function funds the contrat\\n     * @dev this implements pricefeed as our library\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwnwer() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(address funder) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPricefeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x59acf1a877ea9835ad0225df4b2a711c93c7844f6881834d152a426cc85236a6\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xdac1240de4d7617eaaf1694afb2fe26f8ed3ae0c268e947029e0b58a9de13022\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610b96380380610b9683398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610a3761015f6000396000818161022901526103dd0152610a376000f3fe6080604052600436106100595760003560e01c80633ccfd60b1461007257806358f97c0d146100895780635c8eee44146100c65780636b69a592146100f1578063b60d42881461011c578063e5bda81b1461012657610068565b3661006857610066610151565b005b610070610151565b005b34801561007e57600080fd5b50610087610227565b005b34801561009557600080fd5b506100b060048036038101906100ab9190610531565b61035b565b6040516100bd9190610577565b60405180910390f35b3480156100d257600080fd5b506100db6103a3565b6040516100e891906105f1565b60405180910390f35b3480156100fd57600080fd5b506101066103cd565b6040516101139190610577565b60405180910390f35b610124610151565b005b34801561013257600080fd5b5061013b6103d9565b604051610148919061061b565b60405180910390f35b678ac7230489e8000061018f600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461040190919063ffffffff16565b10156101d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c790610693565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461021e91906106e2565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ac576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516102d290610747565b60006040518083038185875af1925050503d806000811461030f576040519150601f19603f3d011682016040523d82523d6000602084013e610314565b606091505b5050905080610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034f906107a8565b60405180910390fd5b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b678ac7230489e8000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008061040d8361043d565b90506000670de0b6b3a7640000858361042691906107c8565b6104309190610839565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af919061090e565b5050509150506402540be400816104c69190610989565b915050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104fe826104d3565b9050919050565b61050e816104f3565b811461051957600080fd5b50565b60008135905061052b81610505565b92915050565b600060208284031215610547576105466104ce565b5b60006105558482850161051c565b91505092915050565b6000819050919050565b6105718161055e565b82525050565b600060208201905061058c6000830184610568565b92915050565b6000819050919050565b60006105b76105b26105ad846104d3565b610592565b6104d3565b9050919050565b60006105c98261059c565b9050919050565b60006105db826105be565b9050919050565b6105eb816105d0565b82525050565b600060208201905061060660008301846105e2565b92915050565b610615816104f3565b82525050565b6000602082019050610630600083018461060c565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061067d601b83610636565b915061068882610647565b602082019050919050565b600060208201905081810360008301526106ac81610670565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106ed8261055e565b91506106f88361055e565b92508282019050808211156107105761070f6106b3565b5b92915050565b600081905092915050565b50565b6000610731600083610716565b915061073c82610721565b600082019050919050565b600061075282610724565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610792600b83610636565b915061079d8261075c565b602082019050919050565b600060208201905081810360008301526107c181610785565b9050919050565b60006107d38261055e565b91506107de8361055e565b92508282026107ec8161055e565b91508282048414831517610803576108026106b3565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006108448261055e565b915061084f8361055e565b92508261085f5761085e61080a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6108898161086a565b811461089457600080fd5b50565b6000815190506108a681610880565b92915050565b6000819050919050565b6108bf816108ac565b81146108ca57600080fd5b50565b6000815190506108dc816108b6565b92915050565b6108eb8161055e565b81146108f657600080fd5b50565b600081519050610908816108e2565b92915050565b600080600080600060a0868803121561092a576109296104ce565b5b600061093888828901610897565b9550506020610949888289016108cd565b945050604061095a888289016108f9565b935050606061096b888289016108f9565b925050608061097c88828901610897565b9150509295509295909350565b6000610994826108ac565b915061099f836108ac565b92508282026109ad816108ac565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156109e5576109e46106b3565b5b82820584148315176109fa576109f96106b3565b5b509291505056fea264697066735822122086076a0571f53419c4e2d4c335ddb42bdd0237d9c8c38a784d2075c8a0e23ef564736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80633ccfd60b1461007257806358f97c0d146100895780635c8eee44146100c65780636b69a592146100f1578063b60d42881461011c578063e5bda81b1461012657610068565b3661006857610066610151565b005b610070610151565b005b34801561007e57600080fd5b50610087610227565b005b34801561009557600080fd5b506100b060048036038101906100ab9190610531565b61035b565b6040516100bd9190610577565b60405180910390f35b3480156100d257600080fd5b506100db6103a3565b6040516100e891906105f1565b60405180910390f35b3480156100fd57600080fd5b506101066103cd565b6040516101139190610577565b60405180910390f35b610124610151565b005b34801561013257600080fd5b5061013b6103d9565b604051610148919061061b565b60405180910390f35b678ac7230489e8000061018f600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461040190919063ffffffff16565b10156101d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c790610693565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461021e91906106e2565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ac576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516102d290610747565b60006040518083038185875af1925050503d806000811461030f576040519150601f19603f3d011682016040523d82523d6000602084013e610314565b606091505b5050905080610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034f906107a8565b60405180910390fd5b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b678ac7230489e8000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008061040d8361043d565b90506000670de0b6b3a7640000858361042691906107c8565b6104309190610839565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af919061090e565b5050509150506402540be400816104c69190610989565b915050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104fe826104d3565b9050919050565b61050e816104f3565b811461051957600080fd5b50565b60008135905061052b81610505565b92915050565b600060208284031215610547576105466104ce565b5b60006105558482850161051c565b91505092915050565b6000819050919050565b6105718161055e565b82525050565b600060208201905061058c6000830184610568565b92915050565b6000819050919050565b60006105b76105b26105ad846104d3565b610592565b6104d3565b9050919050565b60006105c98261059c565b9050919050565b60006105db826105be565b9050919050565b6105eb816105d0565b82525050565b600060208201905061060660008301846105e2565b92915050565b610615816104f3565b82525050565b6000602082019050610630600083018461060c565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061067d601b83610636565b915061068882610647565b602082019050919050565b600060208201905081810360008301526106ac81610670565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106ed8261055e565b91506106f88361055e565b92508282019050808211156107105761070f6106b3565b5b92915050565b600081905092915050565b50565b6000610731600083610716565b915061073c82610721565b600082019050919050565b600061075282610724565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610792600b83610636565b915061079d8261075c565b602082019050919050565b600060208201905081810360008301526107c181610785565b9050919050565b60006107d38261055e565b91506107de8361055e565b92508282026107ec8161055e565b91508282048414831517610803576108026106b3565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006108448261055e565b915061084f8361055e565b92508261085f5761085e61080a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6108898161086a565b811461089457600080fd5b50565b6000815190506108a681610880565b92915050565b6000819050919050565b6108bf816108ac565b81146108ca57600080fd5b50565b6000815190506108dc816108b6565b92915050565b6108eb8161055e565b81146108f657600080fd5b50565b600081519050610908816108e2565b92915050565b600080600080600060a0868803121561092a576109296104ce565b5b600061093888828901610897565b9550506020610949888289016108cd565b945050604061095a888289016108f9565b935050606061096b888289016108f9565b925050608061097c88828901610897565b9150509295509295909350565b6000610994826108ac565b915061099f836108ac565b92508282026109ad816108ac565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156109e5576109e46106b3565b5b82820584148315176109fa576109f96106b3565b5b509291505056fea264697066735822122086076a0571f53419c4e2d4c335ddb42bdd0237d9c8c38a784d2075c8a0e23ef564736f6c63430008110033",
  "devdoc": {
    "author": "Sammy",
    "details": "this implements pricefeed as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "this implements pricefeed as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "this function funds the contrat"
      }
    },
    "notice": "a demo  funnding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}